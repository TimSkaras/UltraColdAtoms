(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    161724,       3080]
NotebookOptionsPosition[    160035,       3047]
NotebookOutlinePosition[    160409,       3063]
CellTagsIndexPosition[    160366,       3060]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Phi]", "n_"], "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"\[Pi]", "^", 
       RowBox[{"(", 
        RowBox[{"1", "/", "4"}], ")"}]}]}], "/", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"2", "^", "n"}], "*", 
       RowBox[{"Factorial", "[", "n", "]"}]}], "]"}]}], " ", "*", " ", 
    RowBox[{"HermiteH", "[", 
     RowBox[{"n", ",", "x"}], "]"}], "*", 
    RowBox[{"E", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"x", "^", "2"}]}], "/", "2"}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Omega]", "0"], "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Omega]", "1"], "=", 
   RowBox[{"1", "/", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "[", "t_", "]"}], "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"1", "+", 
     RowBox[{
      FractionBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Omega]", "0"], "2"], "-", 
         SuperscriptBox[
          SubscriptBox["\[Omega]", "1"], "2"]}], ")"}], 
       SuperscriptBox[
        SubscriptBox["\[Omega]", "1"], "2"]], 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Omega]", "1"], "*", "t"}], "]"}], "^", "2"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Tau]", "[", "t_", "]"}], "=", 
   FractionBox[
    RowBox[{"ArcTan", "[", 
     FractionBox[
      RowBox[{
       SubscriptBox["\[Omega]", "0"], " ", 
       RowBox[{"Tan", "[", 
        RowBox[{"t", " ", 
         SubscriptBox["\[Omega]", "1"]}], "]"}]}], 
      SubscriptBox["\[Omega]", "1"]], "]"}], 
    SubscriptBox["\[Omega]", "0"]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[CapitalPhi]", "n_"], "[", 
    RowBox[{"x_", ",", "t_"}], "]"}], "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"b", "[", "t", "]"}], 
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}]], 
    RowBox[{
     SubscriptBox["\[Phi]", "n"], "[", 
     RowBox[{"x", "/", 
      RowBox[{"b", "[", "t", "]"}]}], "]"}], "*", 
    RowBox[{"E", "^", 
     RowBox[{"(", 
      RowBox[{"I", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "^", "2"}], "*", 
          FractionBox[
           RowBox[{
            RowBox[{"b", "'"}], "[", "t", "]"}], 
           RowBox[{"2", "*", 
            RowBox[{"b", "[", "t", "]"}]}]]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "+", 
            FractionBox["1", "2"]}], ")"}], 
          RowBox[{"\[Tau]", "[", "t", "]"}]}]}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", " ", "\[GreaterEqual]", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "F"], "[", 
    RowBox[{"x_", ",", "y_", ",", "t_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}], " ", "*", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "0"], "[", 
        RowBox[{"x", ",", "t"}], "]"}], 
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "1"], "[", 
        RowBox[{"y", ",", "t"}], "]"}]}], " ", "-", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "0"], "[", 
        RowBox[{"y", ",", "t"}], "]"}], 
       RowBox[{
        SubscriptBox["\[CapitalPhi]", "1"], "[", 
        RowBox[{"x", ",", "t"}], "]"}]}]}], " ", ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Rho]", "F"], "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[Psi]", "F"], "[", 
       RowBox[{"x", ",", 
        SubscriptBox["x", "2"], ",", "0"}], "]"}], "*", 
      RowBox[{
       SubscriptBox["\[Psi]", "F"], "[", 
       RowBox[{"y", ",", 
        SubscriptBox["x", "2"], ",", "0"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "2"], ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "A"], "[", 
    RowBox[{"x_", ",", "y_", ",", "t_", ",", "\[Kappa]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"E", "^", 
     RowBox[{"(", 
      RowBox[{"I", "*", "\[Pi]", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Kappa]"}], ")"}], 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"y", "-", "x"}], "]"}]}], ")"}]}], 
    RowBox[{
     SubscriptBox["\[Psi]", "F"], "[", 
     RowBox[{"x", ",", "y", ",", "t"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Rho]", "\[Alpha]"], "[", 
    RowBox[{"x_", ",", "y_", ",", "\[Kappa]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Rho]", "F"], "[", 
     RowBox[{"x", ",", "y"}], "]"}], "-", 
    RowBox[{
     RowBox[{"Sign", "[", 
      RowBox[{"y", "-", "x"}], "]"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sign", "[", 
            RowBox[{"y", "-", "x"}], "]"}]}], "*", "I", "*", "\[Pi]", "*", 
          "\[Kappa]"}], ")"}]}], "+", "1"}], ")"}], "*", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["\[Psi]", "F"], "[", 
         RowBox[{"x", ",", 
          SubscriptBox["x", "2"], ",", "0"}], "]"}], "*", 
        RowBox[{
         SubscriptBox["\[Psi]", "F"], "[", 
         RowBox[{"y", ",", 
          SubscriptBox["x", "2"], ",", "0"}], "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "2"], ",", "x", ",", " ", "y"}], "}"}]}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Rho]", "A"], "[", 
    RowBox[{"x_", ",", "y_", ",", "t_", ",", "\[Kappa]_"}], "]"}], "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"b", "[", "t", "]"}]], "*", 
    RowBox[{
     SubscriptBox["\[Rho]", "\[Alpha]"], "[", 
     RowBox[{
      FractionBox["x", 
       RowBox[{"b", "[", "t", "]"}]], ",", 
      FractionBox["y", 
       RowBox[{"b", "[", "t", "]"}]], ",", "\[Kappa]"}], "]"}], "*", 
    RowBox[{"E", "^", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"I", "*", 
         RowBox[{
          RowBox[{"b", "'"}], "[", "t", "]"}]}], 
        RowBox[{"2", 
         RowBox[{"b", "[", "t", "]"}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"y", "^", "2"}], "-", 
         RowBox[{"x", "^", "2"}]}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["n", "F"], "[", "p_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"2", "/", 
     RowBox[{"(", 
      RowBox[{"2", "*", "\[Pi]"}], ")"}]}], "*", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "I"}], "*", "p", "*", 
          RowBox[{"(", 
           RowBox[{"y", "-", "x"}], ")"}]}], ")"}]}], "*", 
       RowBox[{
        SubscriptBox["\[Rho]", "F"], "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MInt", "[", 
    RowBox[{"p_", ",", "t_", ",", "\[Kappa]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["2", 
     RowBox[{"2", "\[Pi]"}]], 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{"I", "*", "p", "*", 
          RowBox[{"(", 
           RowBox[{"x", "-", "y"}], ")"}]}], ")"}]}], 
       RowBox[{
        SubscriptBox["\[Rho]", "A"], "[", 
        RowBox[{"x", ",", "y", ",", "t", ",", "\[Kappa]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<LocalAdaptive\>\"", ",", " ", 
         RowBox[{"Method", "\[Rule]", "\"\<CartesianRule\>\""}]}], "}"}]}], 
      ",", " ", 
      RowBox[{"AccuracyGoal", "\[Rule]", "6"}], ",", 
      RowBox[{"PrecisionGoal", "\[Rule]", "6"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["n", "A"], "[", 
    RowBox[{"p_", ",", "t_", ",", "\[Kappa]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     SubscriptBox["n", "A"], "[", 
     RowBox[{"p", ",", "t", ",", "\[Kappa]"}], "]"}], "=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"p", "\[GreaterEqual]", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"t", "\[LessEqual]", 
         RowBox[{"3", 
          RowBox[{"\[Pi]", "/", "2"}]}]}], ",", 
        RowBox[{"Re", "[", 
         RowBox[{"MInt", "[", 
          RowBox[{"p", ",", "t", ",", "\[Kappa]"}], "]"}], "]"}], ",", 
        RowBox[{"Re", "[", 
         RowBox[{
          SubscriptBox["n", "A"], "[", 
          RowBox[{"p", ",", 
           RowBox[{
            RowBox[{"3", "\[Pi]"}], "-", "t"}], ",", "\[Kappa]"}], "]"}], 
         "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"t", "\[LessEqual]", 
         RowBox[{"3", 
          RowBox[{"\[Pi]", "/", "2"}]}]}], ",", 
        RowBox[{"Re", "[", 
         RowBox[{
          SubscriptBox["n", "A"], "[", 
          RowBox[{
           RowBox[{"-", "p"}], ",", "t", ",", "\[Kappa]"}], "]"}], "]"}], ",", 
        RowBox[{"Re", "[", 
         RowBox[{
          SubscriptBox["n", "A"], "[", 
          RowBox[{"p", ",", 
           RowBox[{
            RowBox[{"3", "\[Pi]"}], "-", "t"}], ",", "\[Kappa]"}], "]"}], 
         "]"}]}], "]"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7386031118446283`*^9, 3.7386031807294607`*^9}, 
   3.7386033199863377`*^9, {3.7386040412358065`*^9, 3.7386040658053627`*^9}, {
   3.7386041534013677`*^9, 3.7386041702069306`*^9}, {3.7386046993157835`*^9, 
   3.7386047530472136`*^9}, {3.738605472416561*^9, 3.7386054735474243`*^9}, {
   3.7386891309491987`*^9, 3.738689177048938*^9}, {3.7386893231827745`*^9, 
   3.738689326360113*^9}, {3.7386894327743044`*^9, 3.738689540181881*^9}, {
   3.7386895842068405`*^9, 3.738689618848774*^9}, 3.738692757602641*^9, {
   3.7386928347283254`*^9, 3.738692838478372*^9}, {3.7386930775648966`*^9, 
   3.738693081634306*^9}, {3.738693446062162*^9, 3.738693448362252*^9}, {
   3.738693783963338*^9, 3.738693802568183*^9}, {3.7388370840122137`*^9, 
   3.738837086821333*^9}, {3.738925196627149*^9, 3.738925198044905*^9}, {
   3.738929224483144*^9, 3.7389292421664553`*^9}, {3.738929298235135*^9, 
   3.7389292996811295`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"6e25dbd6-569d-4a9d-a7bc-30d8e5fe93a0"],

Cell[BoxData[
 StyleBox[
  RowBox[{" ", 
   RowBox[{
    RowBox[{
    "We", " ", "should", " ", "see", " ", "that", " ", "the", " ", "period", 
     " ", "of", " ", "motion", " ", "for", " ", "the", " ", "system", " ", 
     "is", " ", "T"}], " ", "=", " ", 
    RowBox[{
     FractionBox["\[Pi]", 
      SubscriptBox["\[Omega]", "1"]], "=", 
     RowBox[{"3", 
      RowBox[{"\[Pi]", " ", "--"}], " ", "so", " ", "we", " ", "only", " ", 
      "need", " ", "to", " ", "numerically", " ", "simulate", " ", "for", " ",
       "3", "\[Pi]", " ", "seconds", "  "}]}]}]}], "Text"]], "Text",
 CellChangeTimes->{{3.7386038890765142`*^9, 3.738603987901466*^9}, {
  3.738689677392844*^9, 3.7386896813275924`*^9}, {3.7389259677788897`*^9, 
  3.738925971528338*^9}},ExpressionUUID->"2e159ba4-e9c9-4426-a5bc-\
1538c3c6e562"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Pdomain", "=", 
   RowBox[{"Union", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "0", ",", 
       RowBox[{"1", "/", "5"}]}], "]"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "2", ",", 
       RowBox[{"1", "/", "5"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.5"}], ",", "2.5", ",", 
       RowBox[{"-", "3"}], ",", "3", ",", 
       RowBox[{"-", "3.5"}], ",", "3.5", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tdomain", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "*", 
      RowBox[{"\[Pi]", "/", "16"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "48"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.738604069285019*^9, 3.7386041232850876`*^9}, {
   3.738604175731043*^9, 3.7386042422266693`*^9}, {3.7386042752259884`*^9, 
   3.7386043421523027`*^9}, {3.7386044260392427`*^9, 
   3.7386044520767193`*^9}, {3.738604788379537*^9, 3.7386048228194404`*^9}, {
   3.7386048764083023`*^9, 3.738604925438469*^9}, {3.7386049641922665`*^9, 
   3.738605019253851*^9}, {3.738605057148106*^9, 3.7386051764645867`*^9}, {
   3.738668644376934*^9, 3.738668649975011*^9}, {3.7386701599783773`*^9, 
   3.738670184553939*^9}, {3.7386702272386975`*^9, 3.738670281305507*^9}, 
   3.7386712887122736`*^9, 3.7387912480309873`*^9, {3.7388361200478077`*^9, 
   3.7388361478836737`*^9}, {3.7388377847455463`*^9, 3.738837786887081*^9}, {
   3.7388601045758505`*^9, 3.7388601073044386`*^9}, {3.7388636001449037`*^9, 
   3.738863602126583*^9}, {3.738863724113351*^9, 3.7388637275087595`*^9}, {
   3.738863790085532*^9, 3.7388637920135317`*^9}, {3.7388672879330893`*^9, 
   3.7388672945659685`*^9}, {3.738925777839255*^9, 3.738925921486185*^9}, {
   3.7389291852633343`*^9, 3.738929185466488*^9}, {3.738929483974002*^9, 
   3.7389294897601833`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"14fc2212-b583-42ac-bcb5-bcff48025919"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["n", "A"], "[", 
        RowBox[{"#", ",", 
         RowBox[{"Tdomain", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", " ", "0"}], "]"}], "&"}], ",", 
      "Pdomain"}], "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{"ToString", "[", "i", "]"}], " ", "<>", 
      "\"\< is complete\>\""}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "Tdomain", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7386937152726583`*^9, 3.7386937683095403`*^9}, {
   3.738693816625643*^9, 3.7386938250333357`*^9}, {3.738790689792465*^9, 
   3.7387907591341023`*^9}, {3.7387908357347927`*^9, 3.738790857183335*^9}, {
   3.7387910328142138`*^9, 3.7387910897115498`*^9}, {3.738791227292768*^9, 
   3.738791312286147*^9}, {3.738791346909777*^9, 3.738791348908131*^9}, {
   3.7387913982207994`*^9, 3.738791441858971*^9}, {3.7387914804322786`*^9, 
   3.738791504207719*^9}, {3.738791575846964*^9, 3.7387915774516716`*^9}, {
   3.7387916201601815`*^9, 3.7387916629302998`*^9}, {3.738791713016244*^9, 
   3.7387919050497074`*^9}, {3.738791944997901*^9, 3.738792046939227*^9}, {
   3.7387920977590275`*^9, 3.738792150386932*^9}, {3.738835248824011*^9, 
   3.73883526627774*^9}, {3.738836197376436*^9, 3.7388362670022545`*^9}, 
   3.7388365564326525`*^9, 3.738836845442358*^9, 3.7388368975360346`*^9, 
   3.7388369487991705`*^9, {3.7388370739531374`*^9, 3.738837078871126*^9}, {
   3.7388372304030714`*^9, 3.7388372557154036`*^9}, {3.7388373693227444`*^9, 
   3.7388373703622637`*^9}, 3.738837664024008*^9, {3.7388377689393473`*^9, 
   3.738837774283131*^9}, {3.7388588302854843`*^9, 3.7388589468097878`*^9}, {
   3.738863557371189*^9, 3.7388635940865088`*^9}, {3.7388640510919123`*^9, 
   3.738864053966488*^9}, {3.738864085296055*^9, 3.738864099373603*^9}, {
   3.738864139794922*^9, 3.7388641427279778`*^9}, {3.738867560136142*^9, 
   3.7388676035508857`*^9}, {3.73887155840336*^9, 3.7388715731140738`*^9}, 
   3.7388716247370944`*^9, 3.7388719797186966`*^9, 3.7389258453059044`*^9, {
   3.7389259601837654`*^9, 3.7389259635444064`*^9}, {3.7389260202759533`*^9, 
   3.7389261215927963`*^9}, 3.7389261729694*^9},
 CellLabel->"In[70]:=",ExpressionUUID->"c4efa759-23aa-4763-aa26-221ba10a7a72"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["f", "m_"], ":=", " ", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Thread", "[", 
     RowBox[{"{", 
      RowBox[{"Pdomain", ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{
           SubscriptBox["n", "A"], "[", 
           RowBox[{
            RowBox[{"Pdomain", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
            RowBox[{"Tdomain", "[", 
             RowBox[{"[", "m", "]"}], "]"}], ",", "0"}], " ", "]"}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "Pdomain", "]"}]}], "}"}]}], " ", "]"}]}], 
      " ", "}"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FuncList", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["f", "i"], "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "Tdomain", "]"}], "/", "2"}], "+", "1"}], ",",
        "4"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.738836282801305*^9, 3.7388362938293676`*^9}, {
   3.738836405628389*^9, 3.7388364060033245`*^9}, {3.7388364570886793`*^9, 
   3.7388365028584967`*^9}, {3.7388366235928893`*^9, 
   3.7388366262864227`*^9}, {3.738836982622675*^9, 3.7388370114027805`*^9}, {
   3.7388372661976414`*^9, 3.7388373083793974`*^9}, {3.7388376397528133`*^9, 
   3.7388376509127192`*^9}, {3.738837736354258*^9, 3.73883775881317*^9}, {
   3.738837805254079*^9, 3.7388378302117605`*^9}, {3.738839220898307*^9, 
   3.738839222172209*^9}, {3.738839277269248*^9, 3.73883932020745*^9}, {
   3.7388393652270055`*^9, 3.7388394076940956`*^9}, {3.738839567541789*^9, 
   3.7388395684844737`*^9}, {3.7388396291694536`*^9, 
   3.7388396335335636`*^9}, {3.7388396671043496`*^9, 3.738839680802038*^9}, 
   3.738841242682253*^9, 3.7388632679710693`*^9, {3.7388636225624404`*^9, 
   3.738863626587122*^9}, {3.7388638048812866`*^9, 3.7388638416947713`*^9}, {
   3.738867616317921*^9, 3.7388676165835476`*^9}, {3.7389290140820017`*^9, 
   3.738929041772583*^9}, {3.738929107997517*^9, 3.7389291266387324`*^9}, {
   3.738940030357759*^9, 3.738940084012351*^9}, 3.738940164998471*^9, {
   3.738940354514433*^9, 3.7389403548425617`*^9}, {3.7389404069187145`*^9, 
   3.738940426698373*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"db89ea4f-99b6-45ca-8cd4-feda44ff7ee0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{"FuncList", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "4"}], "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Momentum Distribution: Oscillating Gas of HCB \
(\!\(\*SubscriptBox[\(\[Omega]\), \(0\)]\)=1,\!\(\*SubscriptBox[\(\[Omega]\), \
\(1\)]\)=1/3)\>\""}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<p\>\"", ",", "\"\<\!\(\*SubscriptBox[\(n\), \(B\)]\)(p,t)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "Dashed", ",", "Default", ",", "Default", ",", "Default", ",", 
       "Default", ",", "Default", ",", "Default"}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"Scaled", "[", "0.4", "]"}]}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<t=0\>\"", ",", "\"\<t=\[Pi]/4\>\"", ",", "\"\<t=\[Pi]/2\>\"", ",", 
       "\"\<t=3\[Pi]/4\>\"", ",", "\"\<t=\[Pi]\>\"", ",", 
       "\"\<t=5\[Pi]/2\>\"", ",", "\"\<t=3\[Pi]/2\>\""}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:/Users/Tim/Documents/PhysicsResearch/UltraColdAtoms/Plots/\
MomDistOscillatingTG.png\>\"", ",", "p1"}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/VrwwzbX268dc9k9t4PobonkvSA6q/AxmLZq4zsM
ouseO4LpUnOJ4yD6XpAdmP73yEHUDUi3J7uC6aiJk+b5AWmx/rULQPSamK4l
IJqZ7+0KEC3Rsd3XH0hPbz8CpqXaHgSCaNnkDyEges+uc7UBQPrUX9smEN3i
FtwGonkizSaA6J4JjvNB9I9HzitA9IkL8UdA9DKf/GMgWkBb8wqI/jbrN5ie
8r/SLRBIb4j4D6Yb3Wd/DwLSVRtFf4BohZQCyVCQO/8sAtOrZrCqFgLpojAj
ML2i+bRXGUj83GQfEB3gsCMJRC+rv5UJorfc0M4H0XdMlhWCaIHLuS0g2m7N
VDD9qcWwrhZIf2mxBNOb3wbMB9GOfzgXgOgf+Zv3gOii2/oHQDQAhyLf1A==

  "],
 CellLabel->
  "In[151]:=",ExpressionUUID->"853eaabb-8dcc-4049-a5d9-ce47a4f7cfad"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
Df//XkZc+P/3sv8DV3r5zw==
          "]]}, Annotation[#, "Charting`Private`Tag$90374#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$90374#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
esk83b4BcRoZEzVi9TAv10WUurQJVo7jRxve1QIuiXO5/somqB9MMSRm1gLn
0o3xazc3QZbDe+22Xy3Ilgy0ellugotG8kDS6VpwOfwr9D1tE3Y8UvFzyK4B
Ot8yqx26CXHbc5IHIqthem0/e57cFjjbv0eknStBsTVUaxjZApGK+cddlysh
5uFCBLfGFuA+fvj3VLISZCQ/kgMoW9Df/c6+ZLQC7t30ZqZ6b0HW0+rhev0K
YCr+ushWtwXKDbGLQVrlwGOV8M0ZtuF89gRLpG4p2Mgw8+eobQOPpMRTm9Ol
UL3uoD90dRviz/MUOe8rBYNHqn3qptuwXqJdhhsqgQx0oUMkYBuiBn+pnbUp
AWn+6029TdswPljzYD64GDJsQj/vF2NCxgVupqfmvgIWH9uPYoeYEElZkYJJ
t1fgEqPRJC3NhNivnKG5K78CqGArPneSCRldSNBB+gthGBcXaXCBCcna6fei
iKUQDjxLVkm1YEJm0IH6L54vIflzfjF/FhPiAF8mJ4JzgWkiIlc0jwlZfl8Q
V6yfC7brt59JFTIhLxvuL5VK58JZ0WNRCuVMSJySfZVNTw70O5faUJuZEJ2/
nTqxojnAzfZGMGWMCeE4mX+/7VMWxJ1vj+ITZ0a8ZQs6na++gEsNmSeHJJmR
pUJ7tnXpF7Ch4DP47AgzQstuTqtieQG2p6QkD55iRoZ41iOam54Dcijs7bEL
zMhOhVvCR+Sfw9xO1bULZsxIhe9ysMTxDLj69Y2N01NmZG/B+Zk+xrpHuPmY
XfY5M3L/VdchdtU0qO22r1jIYkb+KLTUZLOmgcRHPrxXITOixnrx3nxCKmzV
ezwLfMOMpM7b2WyXpkBR5sm+5AFmJIee9rVzKxnYnQtU3u7FIX0qanZxQwlg
9SKJ4wsfDrEobroSlZ8AdX2Bw1MCOKS6763B4r0EsFM09OaUwCH/3XV1YOFK
gGbWXaVmZ3DIX23ZfEWdePDOchJhuoVDer03+6qGH0H3F+ofLgMc8qj9t5V1
6SOQZFOrP2SCQ5Ji6rb9Qh5Bn6sQ5aoNDnn28Or72eOPQAa64p554JBL/U0b
9aEPYXxAlkkpGYdwuiZLsV2OA6Vdgh06aThk/JiXg6Z4HOO8uSPNMgOHMEmb
y/7ajoXzuaNno/JwiA5PgA7dIRbS3B87f6vGIdsVUgOVOjFwfffSsNcADilV
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
Ifn/f3/v/wCrffmx
          "]]}, Annotation[#, "Charting`Private`Tag$90374#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$90374#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
j+1Vhv/3PxDy//8H+j/BwPu6
          "]]}, Annotation[#, "Charting`Private`Tag$90374#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$90374#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Adn9Eos=
          "]]}, Annotation[#, "Charting`Private`Tag$90374#7"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"p\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(n\\), \\(B\\)]\\)(p,t)\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Scaled[0.4], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Momentum Distribution: Oscillating Gas of HCB \
(\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \
\\(0\\)]\\)=1,\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(1\\)]\\)=1/3)\"", 
       TraditionalForm], 
     PlotRange -> {{-2.9999998775510206`, 2.9999998775510206`}, {0, 4}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"t=0\"", "\"t=\[Pi]/4\"", "\"t=\[Pi]/2\"", "\"t=3\[Pi]/4\"", 
       "\"t=\[Pi]\"", "\"t=5\[Pi]/2\"", "\"t=3\[Pi]/2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.738929137699849*^9, {3.7389399978793526`*^9, 3.7389400109463797`*^9}, {
   3.738940047308832*^9, 3.738940087686352*^9}, 3.738940168285649*^9, {
   3.7389402329733343`*^9, 3.738940240050618*^9}, 3.738940302856639*^9, 
   3.7389403822621174`*^9, {3.738940429353114*^9, 3.7389404534699993`*^9}, 
   3.738954661324752*^9, 3.7389547383938107`*^9, 3.738955012269393*^9, 
   3.7389552664338555`*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"e32c3d4f-6b8e-4486-b486-bf4a4687dc22"],

Cell[BoxData["\<\"C:/Users/Tim/Documents/PhysicsResearch/UltraColdAtoms/Plots/\
MomDistOscillatingTG.png\"\>"], "Output",
 CellChangeTimes->{
  3.738929137699849*^9, {3.7389399978793526`*^9, 3.7389400109463797`*^9}, {
   3.738940047308832*^9, 3.738940087686352*^9}, 3.738940168285649*^9, {
   3.7389402329733343`*^9, 3.738940240050618*^9}, 3.738940302856639*^9, 
   3.7389403822621174`*^9, {3.738940429353114*^9, 3.7389404534699993`*^9}, 
   3.738954661324752*^9, 3.7389547383938107`*^9, 3.738955012269393*^9, 
   3.7389552667300496`*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"f375ef73-2201-42a0-8d5d-8591960389df"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"frame", "[", "i_", "]"}], ":=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["f", "i"], "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "4"}], "}"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Momentum Distribution: Oscillating Gas of HCB \
(\!\(\*SubscriptBox[\(\[Omega]\), \(0\)]\)=1,\!\(\*SubscriptBox[\(\[Omega]\), \
\(1\)]\)=1/3)\>\""}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<p\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(n\), \(B\)]\)(p,t)\>\""}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"Scaled", "[", "1", "]"}]}]}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<t = ``\>\"", ",", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"N", "[", 
             RowBox[{"Tdomain", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", ".1"}], " ", 
           "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"frames", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"frame", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{
        RowBox[{"Length", "[", "Tdomain", "]"}], " ", "-", " ", "1"}]}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<C:/Users/Tim/Documents/PhysicsResearch/UltraColdAtoms/Plots/\
OscillatingTG.gif\>\"", ",", "frames", ",", 
    RowBox[{"AnimationRepetitions", "->", "Infinity"}], ",", 
    RowBox[{"\"\<DisplayDurations\>\"", "\[Rule]", " ", ".16"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7388632320065017`*^9, 3.7388632587168736`*^9}, {
   3.73886336490373*^9, 3.7388633976996603`*^9}, {3.738863432163872*^9, 
   3.738863475527521*^9}, 3.7388636781723194`*^9, {3.7388720574978046`*^9, 
   3.738872058129271*^9}, {3.7389293378311296`*^9, 3.738929357679867*^9}, 
   3.738929398873824*^9, {3.738933923494172*^9, 3.7389339253274584`*^9}, {
   3.7389339691485233`*^9, 3.7389339711896296`*^9}, {3.738934014444687*^9, 
   3.7389340205130997`*^9}, {3.7389340619660425`*^9, 
   3.7389340760465918`*^9}, {3.7389341494959407`*^9, 3.738934152137211*^9}, {
   3.738934402072649*^9, 3.7389344218665257`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"e1ae11a3-4397-4bf0-8e8b-89303511f2fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["n", "A"], "[", 
  RowBox[{"4", ",", "0", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7388371278245044`*^9, 3.7388372231436377`*^9}, {
  3.738858587929168*^9, 3.7388586166846066`*^9}, {3.738858682404913*^9, 
  3.738858685646885*^9}, {3.7389254355464954`*^9, 3.738925447540903*^9}, {
  3.738925481020401*^9, 3.738925500747177*^9}, {3.7389257296874094`*^9, 
  3.7389257625122166`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"cc4f2ba6-b74f-49d9-b61b-0c85f576a4fc"],

Cell[BoxData["0.0031523035364992586`"], "Output",
 CellChangeTimes->{{3.7388371438244877`*^9, 3.738837223659249*^9}, 
   3.73885859453965*^9, 3.738858649445696*^9, 3.738858702990958*^9, 
   3.7389254557284217`*^9, {3.7389254870714827`*^9, 3.738925503074647*^9}, {
   3.7389257393408213`*^9, 3.738925766652754*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"72b39261-ad63-46b2-b53c-cbea7b4adf2e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DumpSave", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\Tim\\\\Documents\\\\PhysicsResearch\\\\UltraColdAtoms\\\
\\Code\\\\OscillatingHCBdump.mx\>\"", ",", "\"\<Global`\>\""}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7388820134631786`*^9, 3.738882039503568*^9}, {
  3.7388820976657906`*^9, 3.7388821239988384`*^9}, {3.7388822787373314`*^9, 
  3.7388823008266087`*^9}, {3.738882352357501*^9, 3.738882429682043*^9}},
 CellLabel->
  "In[1028]:=",ExpressionUUID->"6cac8e2f-0341-4461-8d04-c6b9c6035c1f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{
      RowBox[{"Length", "[", "Tdomain", "]"}], "/", "2"}], ",", "4"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738940118747114*^9, 3.7389401598218317`*^9}, {
  3.73894036776585*^9, 
  3.738940373887093*^9}},ExpressionUUID->"0d0431da-9312-483b-b66f-\
b73ad53d1d3a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "16"], ",", 
   FractionBox["5", "16"], ",", 
   FractionBox["9", "16"], ",", 
   FractionBox["13", "16"], ",", 
   FractionBox["17", "16"], ",", 
   FractionBox["21", "16"]}], "}"}]], "Output",
 CellChangeTimes->{{3.738940120697666*^9, 3.738940160286749*^9}, 
   3.738940368208869*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"b0c0626d-d99b-4001-b935-ce4efd6446ee"]
}, Open  ]]
},
WindowSize->{1600, 817},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>0.95 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 11382, 341, 444, "Input",ExpressionUUID->"6e25dbd6-569d-4a9d-a7bc-30d8e5fe93a0"],
Cell[11943, 363, 813, 18, 50, "Text",ExpressionUUID->"2e159ba4-e9c9-4426-a5bc-1538c3c6e562"],
Cell[12759, 383, 2057, 43, 46, "Input",ExpressionUUID->"14fc2212-b583-42ac-bcb5-bcff48025919"],
Cell[14819, 428, 2395, 43, 27, "Input",ExpressionUUID->"c4efa759-23aa-4763-aa26-221ba10a7a72"],
Cell[17217, 473, 2478, 54, 47, "Input",ExpressionUUID->"db89ea4f-99b6-45ca-8cd4-feda44ff7ee0"],
Cell[CellGroupData[{
Cell[19720, 531, 2027, 50, 82, "Input",ExpressionUUID->"853eaabb-8dcc-4049-a5d9-ce47a4f7cfad"],
Cell[21750, 583, 132430, 2312, 424, "Output",ExpressionUUID->"e32c3d4f-6b8e-4486-b486-bf4a4687dc22"],
Cell[154183, 2897, 621, 10, 30, "Output",ExpressionUUID->"f375ef73-2201-42a0-8d5d-8591960389df"]
}, Open  ]],
Cell[154819, 2910, 2866, 71, 82, "Input",ExpressionUUID->"e1ae11a3-4397-4bf0-8e8b-89303511f2fc"],
Cell[CellGroupData[{
Cell[157710, 2985, 508, 9, 27, "Input",ExpressionUUID->"cc4f2ba6-b74f-49d9-b61b-0c85f576a4fc"],
Cell[158221, 2996, 393, 5, 30, "Output",ExpressionUUID->"72b39261-ad63-46b2-b53c-cbea7b4adf2e"]
}, Open  ]],
Cell[158629, 3004, 538, 11, 27, "Input",ExpressionUUID->"6cac8e2f-0341-4461-8d04-c6b9c6035c1f"],
Cell[CellGroupData[{
Cell[159192, 3019, 395, 11, 27, "Input",ExpressionUUID->"0d0431da-9312-483b-b66f-b73ad53d1d3a"],
Cell[159590, 3032, 429, 12, 46, "Output",ExpressionUUID->"b0c0626d-d99b-4001-b935-ce4efd6446ee"]
}, Open  ]]
}
]
*)

